#+TITLE: Starter Kit Python
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter kit Python

Support for the Python programming language.

** Use Emacs' python.el and IPython
Replace the Python mode that comes with Emacs by the Python mode
supplied by the Python distribution itself.
#+begin_src emacs-lisp
    
  (require 'python)
    
  (setq
   comint-process-echoes t
   python-shell-interpreter "ipython"
   python-shell-interpreter-args ""
   python-shell-prompt-regexp "In \\[[0-9]+\\]: "
   python-shell-prompt-output-regexp "Out\\[[0-9]+\\]: "
   python-shell-completion-setup-code
     "from IPython.core.completerlib import module_completion"
   python-shell-completion-module-string-code
   "';'.join(module_completion('''%s'''))\n"
   python-shell-completion-string-code
     "';'.join(get_ipython().Completer.all_completions('''%s'''))\n")
  
  (setq org-babel-python-command "ipython --no-banner --classic --no-confirm-exit")
  
  ;; Script to split Python windows
  (defun python-2window ()
   (interactive)
    (delete-other-windows)
    (setq w1 (selected-window))
    (setq w2 (split-window-horizontally))
    (other-window 1)
    (set-window-buffer w2 "*Python*")
    (other-window -1)
  )
  
  ;; cause "Shift+Enter" to send the current line to inferior Python process
  (defun my-python-eval (&optional beg end)
    (interactive)
    (let ((beg (cond (beg beg)
                     ((region-active-p)
                      (region-beginning))
                     (t (line-beginning-position))))
          (end (cond (end end)
                     ((region-active-p)
                      (copy-marker (region-end)))
                     (t (line-end-position)))))
      (python-shell-send-region beg end))
    (call-interactively 'python-2window)
  )
  
  (add-hook 'python-mode-hook
            '(lambda()
               (local-set-key [(shift return)] 'my-python-eval)))
    
#+end_src

** Use Cython mode
   :PROPERTIES:
   :CUSTOM_ID: cython
   :END:
#+begin_src emacs-lisp
  (when (require 'cython-mode nil 'no-error)
    (add-to-list 'auto-mode-alist '("\\.pyx\\'" . cython-mode))
    (add-to-list 'auto-mode-alist '("\\.pxd\\'" . cython-mode))
    (add-to-list 'auto-mode-alist '("\\.pxi\\'" . cython-mode)))
#+end_src

#+source: message-line
#+begin_src emacs-lisp
  (message "Starter Kit Python loaded.")
#+end_src
